'''
‚ñà‚ñÑ‚ñë‚ñà‚ÄÉ‚ñÑ‚ñÄ‚ñà‚ÄÉ‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñÑ‚ñÄ‚ñà‚ÄÉ‚ñà   ‚ñà‚ñÄ‚ñÑ‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñÑ‚ÄÉ‚ñà‚ñë‚ñà‚ÄÉ‚ñà‚ñë‚ñë‚ÄÉ‚ñà‚ñÄ‚ñÄ‚ÄÉ‚ñà‚ñÄ
‚ñà‚ñë‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÑ‚ÄÉ‚ñà‚ñÑ‚ñà‚ÄÉ‚ñà‚ñë‚ñÄ‚ñë‚ñà‚ÄÉ‚ñà   ‚ñà‚ñë‚ñÄ‚ñë‚ñà‚ÄÉ‚ñà‚ñÑ‚ñà‚ÄÉ‚ñà‚ñÑ‚ñÄ‚ÄÉ‚ñà‚ñÑ‚ñà‚ÄÉ‚ñà‚ñÑ‚ñÑ‚ÄÉ‚ñà‚ñà‚ñÑ‚ÄÉ‚ñÑ‚ñà

–ö–∞–Ω–∞–ª: https://t.me/Nazomi_Modules

--------------------------------------------------------------------
–ê–≤—Ç–æ—Ä: @Murex55
–ò–º—è: AutoMIRAGE
–û–ø–∏—Å–∞–Ω–∏–µ: –ú–æ–¥—É–ª—å –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞ @MirageGamingBot
--------------------------------------------------------------------
'''

# meta developer: @Nazomi_Modules
__version__ = (1, 0, 0)

import asyncio
from telethon.tl.types import Message
from .. import loader

@loader.tds
class AutoMIRAGE(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞ @MirageGamingBot"""

    strings = {"name": "AutoMIRAGE"}

    async def client_ready(self, client, db):
        self.client = client
        self.db = db
        self.chat_id = 7165856906
        self.messages = {
            "city": "üåÜ –ì–æ—Ä–æ–¥",
            "business": "üíº –ë–∏–∑–Ω–µ—Å", 
            "mining": "üñ• –ú–∞–π–Ω–∏–Ω–≥",
            "mine": "‚öí –®–∞—Ö—Ç–∞"
        }
        self.business_emojis = ["üè™", "üè¨", "üíä", "üç±", "üöï", "üè≠", "üèñ", "üñ•", "üé¨", "üì∞", "üß™"]
        self.delays = {
            "city": 3610,
            "business": 43210, 
            "mining": 3010,
            "mine": 610
        }
        self.last_executed = self.db.get('AutoMIRAGE', 'last_executed', {key: 0 for key in self.delays})
        self.action_delay = 3
        self._task = asyncio.create_task(self.loop())

    def __init__(self):
        self.config = loader.ModuleConfig(
            loader.ConfigValue(
                "main",
                False,
                lambda: "–û—Å–Ω–æ–≤–Ω–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä —Ä–∞–±–æ—Ç—ã –º–æ–¥—É–ª—è",
                validator=loader.validators.Boolean()
            ),
            loader.ConfigValue(
                "city",
                True,
                lambda: "–ü–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è —Å–±–æ—Ä–∞ –Ω–∞–ª–æ–≥–æ–≤ —Å –≥–æ—Ä–æ–¥–∞",
                validator=loader.validators.Boolean()
            ),
            loader.ConfigValue(
                "business", 
                True,
                lambda: "–ü–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –æ–ø–ª–∞—Ç—ã –Ω–∞–ª–æ–≥–æ–≤ –≤ –±–∏–∑–Ω–µ—Å–µ",
                validator=loader.validators.Boolean()
            ),
            loader.ConfigValue(
                "mining",
                True,
                lambda: "–ü–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –æ–ø–ª–∞—Ç—ã –Ω–∞–ª–æ–≥–æ–≤ –≤ –º–∞–π–Ω–∏–Ω–≥–µ", 
                validator=loader.validators.Boolean()
            ),
            loader.ConfigValue(
                "mine",
                True,
                lambda: "–ü–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –¥–æ–±—ã—á–∏ –≤ —à–∞—Ö—Ç–µ",
                validator=loader.validators.Boolean()
            ),
        )

    async def loop(self):
        while True:
            if self.config["main"]:
                try:
                    for action in ["city", "business", "mining", "mine"]:
                        if self.config[action] and (asyncio.get_event_loop().time() - self.last_executed[action] >= self.delays[action]):
                            self.last_executed[action] = asyncio.get_event_loop().time()
                            await self.client.send_message(self.chat_id, self.messages[action])
                            await asyncio.sleep(self.action_delay)
                    self.db.set('AutoMIRAGE', 'last_executed', self.last_executed)
                except Exception:
                    pass
            await asyncio.sleep(60)

    async def watcher(self, message: Message):
        if message.chat_id == self.chat_id and message.buttons:
            try:
                buttons = message.buttons
                if self.config["city"] and "üåÜ" in message.text:
                    for row in buttons:
                        for button in row:
                            if "üí∏ –°–æ–±—Ä–∞—Ç—å –Ω–∞–ª–æ–≥–∏" in button.text:
                                await button.click()
                                break

                if self.config["business"]:
                    if any(emoji in message.text for emoji in self.business_emojis):
                        for row in buttons:
                            for button in row:
                                if "üí∏ –û–ø–ª–∞—Ç–∏—Ç—å –Ω–∞–ª–æ–≥–∏" in button.text:
                                    await button.click()
                                    break

                if self.config["mining"] and "üñ•" in message.text:
                    for row in buttons:
                        for button in row:
                            if "üí∏ –û–ø–ª–∞—Ç–∏—Ç—å —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ" in button.text:
                                await button.click()
                                break

                if self.config["mine"] and "‚öí" in message.text:
                    for _ in range(15):
                        for row in buttons:
                            for button in row:
                                if "üî® –î–æ–±—ã—Ç—å —Ä—É–¥—É" in button.text:
                                    await button.click()
                                    await asyncio.sleep(3)
                                    break
            except Exception as e:
                if "Encrypted data invalid" in str(e):
                    return

    @loader.command()
    async def nmain(self, message: Message):
        """–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –º–æ–¥—É–ª—å"""
        self.config["main"] = not self.config["main"]
        await message.edit(
            "<b><emoji document_id=5213302802205387293>‚úÖ</emoji> –ú–æ–¥—É–ª—å –≤–∫–ª—é—á–µ–Ω</b>" if self.config["main"] else "<b><emoji document_id=5215539470849288572>‚ùå</emoji> –ú–æ–¥—É–ª—å –≤—ã–∫–ª—é—á–µ–Ω</b>"
        )

    @loader.command()
    async def ncity(self, message: Message):
        """–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å —Å–±–æ—Ä –Ω–∞–ª–æ–≥–æ–≤ —Å –≥–æ—Ä–æ–¥–∞"""
        self.config["city"] = not self.config["city"]
        await message.edit(
            "<b><emoji document_id=5213302802205387293>‚úÖ</emoji> –ê–≤—Ç–æ-—Å–±–æ—Ä –Ω–∞–ª–æ–≥–æ–≤ –≥–æ—Ä–æ–¥–∞ –≤–∫–ª—é—á–µ–Ω</b>" if self.config["city"] else "<b><emoji document_id=5215539470849288572>‚ùå</emoji> –ê–≤—Ç–æ-—Å–±–æ—Ä –Ω–∞–ª–æ–≥–æ–≤ –≥–æ—Ä–æ–¥–∞ –≤—ã–∫–ª—é—á–µ–Ω</b>"
        )

    @loader.command()
    async def nbusiness(self, message: Message):
        """–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –æ–ø–ª–∞—Ç—É –Ω–∞–ª–æ–≥–æ–≤ –±–∏–∑–Ω–µ—Å–∞"""
        self.config["business"] = not self.config["business"]
        await message.edit(
            "<b><emoji document_id=5213302802205387293>‚úÖ</emoji> –ê–≤—Ç–æ-–æ–ø–ª–∞—Ç–∞ –Ω–∞–ª–æ–≥–æ–≤ –±–∏–∑–Ω–µ—Å–∞ –≤–∫–ª—é—á–µ–Ω–∞</b>" if self.config["business"] else "<b><emoji document_id=5215539470849288572>‚ùå</emoji> –ê–≤—Ç–æ-–æ–ø–ª–∞—Ç–∞ –Ω–∞–ª–æ–≥–æ–≤ –±–∏–∑–Ω–µ—Å–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞</b>"
        )

    @loader.command()
    async def nmining(self, message: Message):
        """–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –æ–ø–ª–∞—Ç—É —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–∞ –º–∞–π–Ω–∏–Ω–≥–∞"""
        self.config["mining"] = not self.config["mining"]
        await message.edit(
            "<b><emoji document_id=5213302802205387293>‚úÖ</emoji> –ê–≤—Ç–æ-–æ–ø–ª–∞—Ç–∞ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–∞ –º–∞–π–Ω–∏–Ω–≥–∞ –≤–∫–ª—é—á–µ–Ω–∞</b>" if self.config["mining"] else "<b><emoji document_id=5215539470849288572>‚ùå</emoji>–ê–≤—Ç–æ-–æ–ø–ª–∞—Ç–∞ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–∞ –º–∞–π–Ω–∏–Ω–≥–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞</b>"
        )

    @loader.command()
    async def nmine(self, message: Message):
        """–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –∫–æ–ø–∞–Ω–∏–µ –≤ —à–∞—Ö—Ç–µ"""
        self.config["mine"] = not self.config["mine"]
        await message.edit(
            "<b><emoji document_id=5213302802205387293>‚úÖ</emoji> –ê–≤—Ç–æ-–∫–æ–ø–∞–Ω–∏–µ –≤ —à–∞—Ö—Ç–µ –≤–∫–ª—é—á–µ–Ω–æ</b>" if self.config["mine"] else "<b><emoji document_id=5215539470849288572>‚ùå</emoji> –ê–≤—Ç–æ-–∫–æ–ø–∞–Ω–∏–µ –≤ —à–∞—Ö—Ç–µ –≤—ã–∫–ª—é—á–µ–Ω–æ</b>"
        )

    @loader.command()
    async def nstatus(self, message: Message):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –º–æ–¥—É–ª—è"""
        await message.edit(
            f"<b><emoji document_id=5341715473882955310>‚öôÔ∏è</emoji> –ó–Ω–∞—á–µ–Ω–∏—è –º–æ–¥—É–ª—è:</b>\n\n<b>–û—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å: {'<emoji document_id=5213302802205387293>‚úÖ</emoji>' if self.config['main'] else '<emoji document_id=5215539470849288572>‚ùå</emoji>'}</b>\n"
            f"<b>–ì–æ—Ä–æ–¥: {'<emoji document_id=5213302802205387293>‚úÖ</emoji>' if self.config['city'] else '<emoji document_id=5215539470849288572>‚ùå</emoji>'}</b>\n"
            f"<b>–ë–∏–∑–Ω–µ—Å: {'<emoji document_id=5213302802205387293>‚úÖ</emoji>' if self.config['business'] else '<emoji document_id=5215539470849288572>‚ùå</emoji>'}</b>\n"
            f"<b>–ú–∞–π–Ω–∏–Ω–≥: {'<emoji document_id=5213302802205387293>‚úÖ</emoji>' if self.config['mining'] else '<emoji document_id=5215539470849288572>‚ùå</emoji>'}</b>\n"
            f"<b>–®–∞—Ö—Ç–∞: {'<emoji document_id=5213302802205387293>‚úÖ</emoji>' if self.config['mine'] else '<emoji document_id=5215539470849288572>‚ùå</emoji>'}</b>"
                  )
