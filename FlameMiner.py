from telethon.errors import FloodWaitError
from .. import loader, utils
import asyncio
import time

# meta developer: @flame_modules
@loader.tds
class FlameMiner(loader.Module):
    """üî•–ú–æ–¥—É–ª—å –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–ø–∞–Ω–∏—è –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —à–∞—Ö—Ç–µ"""
    strings = {
        "name": "FlameMiner",
        "a": "<emoji document_id=5420315771991497307>üî•</emoji> <b>–ö–æ–ø–∞–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ</b>",
        "b": "<emoji document_id=5462990652943904884>üò¥</emoji> <b>–ö–æ–ø–∞–Ω–∏–µ –≤—ã–∫–ª—é—á–µ–Ω–æ</b>",
        "c": "<emoji document_id=5980930633298350051>‚úÖ</emoji> <b>–í—ã –≤—ã–±—Ä–∞–ª–∏ —à–∞—Ö—Ç—É:</b> ",
        "d": "<emoji document_id=5240241223632954241>üö´</emoji> <b>–û—à–∏–±–∫–∞:</b> –ù–µ–≤–µ—Ä–Ω–∞—è —à–∞—Ö—Ç–∞! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ <b>Gold</b>, <b>Emerald</b> –∏–ª–∏ <b>Ruby</b>."
    }

    def __init__(self):
        self.config = loader.ModuleConfig(
            "cooldown", 2.0, "–ó–∞–¥–µ—Ä–∂–∫–∞ –∫–æ–ø–∞–Ω–∏—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö",
        )
        self.w = {
            "Gold": 7168860714,
            "Emerald": 7084173311,
            "Ruby": 7066508668,
        }
        self.e = {
            "Gold": "<emoji document_id=5380036576552178412>üíõ</emoji>",
            "Emerald": "<emoji document_id=5379866611811375909>üíö</emoji>",
            "Ruby": "<emoji document_id=5382255988017483709>‚ù§Ô∏è</emoji>",
        }
        self.r = 0

    async def client_ready(self, t, y):
        self.u = t
        self.i = y
        self.o = self.i.get(self.strings['name'], "p", "Gold")
        self.set("s", False)

    @loader.command()
    async def flcd(self, a):
        """–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–¥–µ—Ä–∂–∫—É –∫–æ–ø–∞–Ω–∏—è (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)"""
        try:
            self.config["cooldown"] = float(utils.get_args_raw(a))
            await utils.answer(a, f"<emoji document_id=5980930633298350051>‚úÖ</emoji> <b>–ó–∞–¥–µ—Ä–∂–∫–∞ –∫–æ–ø–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ {self.config['cooldown']} —Å–µ–∫</b>")
        except ValueError:
            await utils.answer(a, "<emoji document_id=5240241223632954241>üö´</emoji> <b>–û—à–∏–±–∫–∞:</b> –£–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ!")

    @loader.command()
    async def flmine(self, s):
        """–í—ã–±—Ä–∞—Ç—å —à–∞—Ö—Ç—É (Gold, Emerald, Ruby)"""
        d = utils.get_args_raw(s).capitalize()
        if d in self.w:
            self.o = d
            self.i.set(self.strings['name'], "p", d)
            f = self.e[d]
            await utils.answer(s, f"{self.strings['c']} {f} <b>{d}</b>")
        else:
            await utils.answer(s, self.strings["d"])

    @loader.command()
    async def fl(self, g):
        """–í–∫–ª—é—á–µ–Ω–∏–µ/–í—ã–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–ø–∞–Ω–∏—è"""
        h = not self.get("s", False)
        self.set("s", h)
        j = self.e[self.o]
        if h:
            await utils.answer(g, f"{j} {self.strings['a']}")
            await self.k()
        else:
            await utils.answer(g, f"{j} {self.strings['b']}")

    async def k(self):
        while self.get("s", False):
            l = time.time()
            if l >= self.r:
                try:
                    await self.u.send_message(self.w[self.o], "–∫–æ–ø")
                except FloodWaitError as z:
                    self.r = l + z.seconds
                    await asyncio.sleep(z.seconds)
                await asyncio.sleep(self.config["cooldown"])
            else:
                await asyncio.sleep(self.r - l)
